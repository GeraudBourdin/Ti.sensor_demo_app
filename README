Demo project for the all in one Titanium sensor module. (Android only).


List of avaliable sensors : 

- TYPE_ACCELEROMETER : 
				Measures the acceleration force in m/s2 that is applied to a device on all three physical axes (x, y, and z), including the force of gravity.
				Common Uses : Motion detection (shake, tilt, etc.).

- TYPE_AMBIENT_TEMPERATURE :
				Measures the ambient room temperature in degrees Celsius (°C).
				Common Uses : Monitoring air temperatures.						

- TYPE_GRAVITY :
				Measures the force of gravity in m/s2 that is applied to a device on all three physical axes (x, y, z).
				Common Uses : Motion detection (shake, tilt, etc.).
					
- TYPE_GYROSCOPE : 	
				Measures a device's rate of rotation in rad/s around each of the three physical axes (x, y, and z).
				Common Uses : Rotation detection (spin, turn, etc.).				

- TYPE_LIGHT : 
				Measures the ambient light level (illumination) in lx.
				Common Uses : Controlling screen brightness.
				
- TYPE_LINEAR_ACCELERATION : 
				Measures the acceleration force in m/s2 that is applied to a device on all three physical axes (x, y, and z), excluding the force of gravity.
				Common Uses : Monitoring acceleration along a single axis.				

- TYPE_MAGNETIC_FIELD : 
				Measures the ambient geomagnetic field for all three physical axes (x, y, z) in μT.
				Common Uses : Creating a compass.
				
- TYPE_ORIENTATION :
				Measures degrees of rotation that a device makes around all three physical axes (x, y, z). As of API level 3 you can obtain the inclination matrix and rotation matrix for a device by using the gravity sensor and the geomagnetic field sensor in conjunction with the getRotationMatrix() method.		
				Common Uses : Determining device position.

- TYPE_PRESSURE : 
				Measures the ambient air pressure in hPa or mbar.
				Common Uses : Monitoring air pressure changes.
				
- TYPE_PROXIMITY :
				Measures the proximity of an object in cm relative to the view screen of a device. This sensor is typically used to determine whether a handset is being held up to a person's ear.
				Common Uses : Phone position during a call.		

- TYPE_RELATIVE_HUMIDITY :
				Measures the relative ambient humidity in percent (%).
				Common Uses : Monitoring dewpoint, absolute, and relative humidity.
				
- TYPE_ROTATION_VECTOR : 
				Measures the orientation of a device by providing the three elements of the device's rotation vector.			
				Common Uses : Motion detection and rotation detection.
																				
- TYPE_GEOMAGNETIC_ROTATION_VECTOR
- TYPE_GYROSCOPE_UNCALIBRATED
- TYPE_LINEAR_ACCELERATION
- TYPE_MAGNETIC_FIELD_UNCALIBRATED
- TYPE_SIGNIFICANT_MOTION
- TYPE_STEP_COUNTER
- TYPE_STEP_DETECTOR
- TYPE_GAME_ROTATION_VECTOR: untested.
- TYPE_HEART_RATE : not in API 19, to enabled it, fork, uncomment and compile https://github.com/GeraudBourdin/ti_sensor with API 21.


--------------------------------------------------------------

USAGE : 

Import it into your mobile project and add it to your controller :

var sensor = require('com.geraudbourdin.sensor');

Get list of sensors avaliable on your mobile :

var sensorList = sensor.getSensorList(sensor.TYPE_ALL);

it return list of constant sensors. 
Just test if sensor is sensor you need is avaliable :

var sensorsCallback = function(e) {
	if(e.sType == sensor.TYPE_ACCELEROMETER){
		// do stuff with your datas. (see demo app for complete usage and examples).
	}
};
for (i in sensorList){
	if( typeof  sensorsId[sensorList[i]] === 'undefined' ){
		continue;
	}
	if(sensorList[i] == sensor.TYPE_ACCELEROMETER){
		// do your stuff like enable it before set event.
		sensor.setSensor(sensor.TYPE_ACCELEROMETER);
		// In JS don't forget to set your function callback before your event !
		sensor.addEventListener('update', sensorsCallback);
	}
}

Ti.Android.currentActivity.addEventListener('pause', function(e) {
	Ti.API.info("removing sensorsCallback on pause");
	sensor.removeEventListener('update', sensorsCallback);
});
Ti.Android.currentActivity.addEventListener('resume', function(e) {
	Ti.API.info("adding sensorsCallback on resume");
	sensor.addEventListener('update', sensorsCallback);
});


List of constants: 











